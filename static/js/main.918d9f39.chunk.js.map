{"version":3,"sources":["components/Button.module.css","containers/Calculator/Calculator.module.css","rdx/theme.ts","rdx/history.ts","containers/Calculator/Calculator.tsx","components/Button.tsx","App.tsx","reportWebVitals.ts","rdx/store.ts","index.tsx"],"names":["module","exports","THEME","initialState","history","error","undefined","LS_HISTORY_NAME","counterSlice","createSlice","name","reducers","push","state","action","payload","localStorage","setItem","JSON","stringify","getHistoryFromLs","historyFromLS","getItem","parse","e","actions","Operations","theme","DARK","toggle","LIGHT","Button","className","children","rest","cn","classes","root","memo","symbols","multiply","minus","plus","divide","dbuttons","Calculator","useState","num","setNum","prev","setPrev","operation","setOperation","clearOnInput","setClearOnInput","historyMode","setHistoryMode","dispatch","useDispatch","useSelector","useEffect","click","useCallback","n","handleAc","calculate","op","result","nprev","Number","nnum","newNum","String","handleEquals","handlePlusMinus","handleOperation","toggleTheme","map","item","onClick","row","flex3","grayButton","db","flex1","yellowButton","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.918d9f39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__2FxWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Calculator_root__2vwkY\",\"result\":\"Calculator_result__1RdMH\",\"row\":\"Calculator_row__2s4Pp\",\"flex1\":\"Calculator_flex1__6zFnU\",\"flex3\":\"Calculator_flex3__O1Ol4\",\"yellowButton\":\"Calculator_yellowButton__2QVw5\",\"grayButton\":\"Calculator_grayButton__C_Zc5\"};","import {createSlice} from '@reduxjs/toolkit'\n\nexport enum THEME {\n    DARK,\n    LIGHT,\n}\n\nexport interface IThemeSlice {\n    theme: THEME;\n}\n\nconst initialState: IThemeSlice = {\n    theme: THEME.DARK,\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        toggle: (state) => {\n            state.theme = state.theme === THEME.DARK ? THEME.LIGHT : THEME.DARK;\n        },\n    }\n})\n\nexport const { toggle } = counterSlice.actions\n\nexport default counterSlice.reducer\n","import {createSlice} from '@reduxjs/toolkit'\n\nexport interface IHistorySlice {\n    history: string[];\n    error?: boolean;\n}\n\nconst initialState: IHistorySlice = {\n    history: [],\n    error: undefined,\n}\n\nexport const LS_HISTORY_NAME = 'CALCULATIONS_HISTORY';\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        push: (state, action) => {\n            state.history.push(action.payload);\n            localStorage?.setItem(LS_HISTORY_NAME, JSON.stringify(state.history));\n        },\n        getHistoryFromLs: (state) => {\n            const historyFromLS = localStorage?.getItem(LS_HISTORY_NAME);\n            if (historyFromLS) {\n                try {\n                    state.history = JSON.parse(historyFromLS);\n                } catch (e) {\n                    state.error = true;\n                }\n            }\n        }\n    }\n})\n\nexport const { push, getHistoryFromLs } = counterSlice.actions\nexport default counterSlice.reducer\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport cn from 'classnames';\n\nimport { getHistoryFromLs, push } from '../../rdx/history';\nimport { toggle } from '../../rdx/theme';\nimport {RootState} from \"../../rdx/store\";\nimport Button from \"../../components/Button\";\nimport classes from \"./Calculator.module.css\"\n\nenum Operations {\n    plus,\n    minus,\n    divide,\n    multiply\n}\n\nconst symbols = {\n    [Operations.multiply]: '*',\n    [Operations.minus]: '-',\n    [Operations.plus]: '+',\n    [Operations.divide]: '/',\n}\n\nconst dbuttons = [7,8,9,4,5,6,1,2,3,0];\n\nfunction Calculator() {\n    const [num, setNum] = useState<string>('0');\n    const [prev, setPrev] = useState<string>('0');\n    const [operation, setOperation] = useState<Operations>()\n    const [clearOnInput, setClearOnInput] = useState<boolean>(true);\n    const [historyMode, setHistoryMode] = useState<boolean>(false);\n    const dispatch = useDispatch();\n\n    const { history } = useSelector((state: RootState)  => state.history);\n\n    useEffect(() => {\n        dispatch(getHistoryFromLs());\n    }, [dispatch])\n\n    const click = useCallback((n) => {\n        if (clearOnInput) {\n            if (num !== '0') {\n                setPrev(num);\n            }\n            setNum(n);\n            setClearOnInput(false);\n        } else {\n            setNum(`${num}${n}`);\n        }\n    }, [num, clearOnInput]);\n\n    const handleAc = useCallback(() => {\n        setNum('0');\n        setPrev('0');\n        setClearOnInput(true);\n    }, []);\n\n    const calculate = useCallback((op) => {\n        if (operation === undefined || !prev) {\n            return false;\n        }\n\n        let result;\n        let nprev: number = Number(prev);\n        let nnum: number = Number(num);\n        switch (operation) {\n            case undefined:\n                break;\n            case Operations.multiply:\n                result = nprev * nnum;\n                break;\n            case Operations.divide:\n                result = nprev / nnum;\n                break;\n            case Operations.plus:\n                result = nprev + nnum;\n                break;\n            case Operations.minus:\n                result = nprev - nnum;\n                break;\n            default:\n                break;\n        }\n        const newNum = String(result);\n        setNum(newNum);\n\n        dispatch(push(`${nprev} ${symbols[operation]} ${nnum} = ${newNum}`));\n    }, [operation, prev, num, dispatch, push]);\n\n    const handleEquals = useCallback((op) => {\n        calculate(op);\n        setOperation(undefined);\n    }, [calculate]);\n\n    const handlePlusMinus = useCallback(() => {\n        setNum(String(-Number(num)));\n    }, [num]);\n\n    const handleOperation = useCallback((op) => {\n        if (operation !== undefined) {\n            calculate(op);\n        }\n        setOperation(op);\n        setPrev(num);\n        setClearOnInput(true);\n    }, [num, operation, calculate]);\n\n    const toggleTheme = useCallback(() => {\n        dispatch(toggle());\n    }, [dispatch]);\n\n    if (historyMode) {\n        return (\n            <div className=\"App\">\n                <div className={classes.root}>\n                    <div>\n                        {history.map(item => (\n                            <div key={item}>\n                                {item}\n                            </div>\n                        ))}\n                        <Button onClick={() => setHistoryMode(false)}>{'<'}</Button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"App\">\n            <div className={classes.root}>\n                <div className={classes.result}>{num}</div>\n                <div className={classes.row}>\n                    <div className={cn(classes.row, classes.flex3)}>\n                        <Button\n                            className={classes.grayButton}\n                            onClick={handleAc}\n                        >\n                            Ac\n                        </Button>\n                        <Button\n                            className={classes.grayButton}\n                            onClick={handlePlusMinus}\n                        >\n                            +/-\n                        </Button>\n                        <Button className={classes.grayButton}>%</Button>\n                        {\n                            dbuttons.map((db) => (\n                                <Button onClick={() => click(db)}>{db}</Button>\n                            ))\n                        }\n                        <Button onClick={() => setHistoryMode(true)}>i</Button>\n                        <Button onClick={() => click('.')}>.</Button>\n                        <Button onClick={toggleTheme}>l/d</Button>\n                    </div>\n                    <div className={cn(classes.flex1, classes.row)}>\n                        <Button\n                            className={classes.yellowButton}\n                            onClick={() => handleOperation(Operations.divide)}\n                        >\n                            ÷\n                        </Button>\n                        <Button\n                            className={classes.yellowButton}\n                            onClick={() => handleOperation(Operations.multiply)}\n                        >\n                            x\n                        </Button>\n                        <Button\n                            className={classes.yellowButton}\n                            onClick={() => handleOperation(Operations.minus)}\n                        >\n                            -\n                        </Button>\n                        <Button\n                            className={classes.yellowButton}\n                            onClick={() => handleOperation(Operations.plus)}\n                        >\n                            +\n                        </Button>\n                        <Button\n                            className={classes.yellowButton}\n                            onClick={handleEquals}\n                        >\n                            =\n                        </Button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Calculator;\n","import React, {memo, FC} from 'react';\n// @ts-ignore\nimport cn from 'classnames';\nimport classes from './Button.module.css';\n\ninterface ButtonProps {\n    className?: string;\n    onClick?: (param: any) => void;\n    children?: any;\n}\n\nconst Button: FC<ButtonProps> = ({ className, children, ...rest }) => {\n    return <div className={cn(classes.root, className)} {...rest}>{children}</div>\n};\n\nexport default memo(Button)\n","import Calculator from \"./containers/Calculator/Calculator\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"./rdx/store\";\nimport cn from 'classnames';\nimport './App.css';\nimport {THEME} from \"./rdx/theme\";\n\nconst App = () => {\n    const theme = useSelector((state: RootState) => state.theme.theme);\n\n    return (\n        <div className={cn({\n            'theme-dark': theme === THEME.DARK,\n            'theme-light': theme === THEME.LIGHT,\n        })}>\n            <Calculator />\n        </div>\n    )\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore, combineReducers} from '@reduxjs/toolkit'\nimport history from './history';\nimport theme from './theme';\n\n\nconst reducer = combineReducers({\n    history,\n    theme\n});\n\nexport type RootState = ReturnType<typeof store.getState>\n\nconst store = configureStore({\n    reducer\n})\n\n\nexport type AppDispatch = typeof store.dispatch\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// @ts-ignore\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './rdx/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}